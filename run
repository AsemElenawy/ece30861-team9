#!/usr/bin/env bash
set -e
set -euo pipefail

CMD="$1"

if [ "$CMD" = "install" ]; then
  # install dependencies for your project
  python3 -m pip install -r requirements.txt
  exit 0

elif [ "$CMD" = "test" ]; then
  # always start fresh
  : > test_output.txt

  # run pytest with coverage; capture exit code (keep stdout clean)
  set +e
  PYTHONPATH=. python3 -m pytest \
    --maxfail=1 --disable-warnings \
    --cov=src --cov-report=term-missing \
    > test_output.txt 2>&1
  py_status=$?
  # stay in +e while parsing so missing greps don't abort
  # (set -e will be restored right before exiting)

  # ---- robust parsing (never fail if patterns are absent) ----
  collected="$(grep -Eo 'collected[[:space:]]+[0-9]+' test_output.txt 2>/dev/null | awk '{print $2}' | tail -n1)"
  [ -n "$collected" ] || collected=0

  passed="$(grep -Eo '[0-9]+[[:space:]]+passed'  test_output.txt 2>/dev/null | awk '{print $1}' | tail -n1)"
  [ -n "$passed" ] || passed=0

  failed="$(grep -Eo '[0-9]+[[:space:]]+failed'  test_output.txt 2>/dev/null | awk '{print $1}' | tail -n1)"
  [ -n "$failed" ] || failed=0

  errors="$(grep -Eo '[0-9]+[[:space:]]+errors?' test_output.txt 2>/dev/null | awk '{print $1}' | tail -n1)"
  [ -n "$errors" ] || errors=0

  # total: prefer "collected", else sum of outcomes
  total="$collected"
  if ! printf '%s' "$total" | grep -Eq '^[0-9]+$'; then
    total=$((passed + failed + errors))
  fi
  if [ "$total" -eq 0 ] 2>/dev/null; then
    total=$((passed + failed + errors))
  fi

  coverage="$(grep -E '^TOTAL[[:space:]]' test_output.txt 2>/dev/null | awk '{print $NF}' | tr -d '%' | tail -n1)"
  [ -n "$coverage" ] || coverage=0

  # exact required format on stdout
  echo "${passed}/${total} test cases passed. ${coverage}% line coverage achieved."

  # restore -e and exit with pytest's status
  set -e
  if [ "${STRICT_TEST_EXIT:-0}" -ne 0 ]; then
     exit "$py_status"
  else
     exit 0
  fi




elif [ -f "$CMD" ]; then
  # treat argument as a URL_FILE
  PYTHONPATH=. python3 -m src.url.url_main "$CMD" || exit 1
  exit 0

else
  echo "Usage: ./run install | ./run test | ./run /abs/path/to/URL_FILE" 1>&2
  exit 1
fi
